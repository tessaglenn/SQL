#My analysis uses this sample database of Fortune 500 Companies.
CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);

#Analysis

#First, I'm going to select all for the first few rows to see what the data looks like.
SELECT *
FROM fortune_companies
LIMIT 5;

#Which companies offer healthcare benefits and at least 6 weeks of maternity leave?
SELECT company_name, maternity_leave_weeks
FROM fortune_companies
WHERE healthcare_benefits = 1
AND maternity_leave_weeks >= 6
ORDER BY maternity_leave_weeks DESC;
#In this query, I used the AND statement to filter the data to show only the companies with healthcare benefits and at least 6 weeks of maternity leave. I also ordered the results to show the companies with the most weeks of maternity leave first.

#Make a list of the companies in order of the most paid time off days to the least. Also show if each company is above average or below average with how many paid days off they provide. 
SELECT ROUND(AVG(paid_time_off_days)) FROM fortune_companies;
#First, I find the average days off given by all companies. Since I'm going to be grouping my results by the company_id, this allows me to plug in the number into my CASE statement. 
SELECT company_name, paid_time_off_days
,CASE WHEN paid_time_off_days > 18 THEN "Above Average"
WHEN paid_time_off_days < 18 THEN "Below Average"
ELSE "Average" END AS pto_rating
FROM fortune_companies
GROUP BY company_id
ORDER BY paid_time_off_days DESC;
#Then, I show the company name and the number of paid days off they provide as well as use a CASE statement to return if what the company provides is average, above averagem, or below average. I group it by the company id
#and order the data to show the highest number of days first.

#How many retail companies have at least 2000 employees?
SELECT COUNT(*)
FROM fortune_companies
WHERE employees >= 2000
AND industry = "Retail";
#This query counts the number of companies and uses the WHERE and AND clause to filter the data down to just retail companies with at least 2000 employees.

#What industries have revenue over $1 trillion (over 1000 in the database)?
SELECT industry, ROUND(SUM(revenue),2) AS industry_revenue
FROM fortune_companies
GROUP BY industry
HAVING industry_revenue > 1000
ORDER BY industry_revenue DESC;
#This query gathers the industry and total revenue for each industry and filters down to just return the industries that had $1 trillion in revenue using the HAVING clause.

#Which companies have either less than 2000 employees or have an average tenure of at least 6 years? Show the companies in order of longest tenure.
SELECT company_name, employees, avg_employee_tenure
FROM fortune_companies
WHERE avg_employee_tenure >= 6
OR employees < 2000
ORDER BY avg_employee_tenure DESC;
#This query uses the OR clause to return th ecompanies that either have more than 2000 employees or have an average employee tenure of at least 6 years.

#Which industry has the most paid time off days on average?
SELECT industry, MAX(avg_time_off) AS industry_avg_days_off
FROM (SELECT industry, ROUND(AVG(paid_time_off_days)) AS avg_time_off 
      FROM fortune_companies
      GROUP BY industry);
#This query uses a subquery to find the average paid time off days per industry. I then use that subquery to find the industry that averages the most paid time off days using the MAX function.
      
#Which industry has the least paid time off days on average?
SELECT industry, MIN(avg_time_off) AS industry_avg_days_off
FROM (SELECT industry, ROUND(AVG(paid_time_off_days)) AS avg_time_off
      FROM fortune_companies
      GROUP BY industry);
#This query does the same as the previous query except it finds the industry with the lowest paid time off days using the MIN function.

#Which companies offer more than 16 total weeks off for maternity leave and paid time days off?
SELECT company_name, (maternity_leave_weeks + (paid_time_off_days / 7)) AS weeks_given_off
FROM fortune_companies
WHERE weeks_given_off > 16
ORDER BY weeks_given_off DESC;
#This query calculates the total amount of weeks off each company gives and filters the results down to show just the ones that offer more than 16 weeks off.
                   
#Which industries have an average employee tenure of 5.5 years or more?
SELECT industry, ROUND(AVG(avg_employee_tenure), 1) AS industry_tenure
FROM fortune_companies
GROUP BY industry
HAVING industry_tenure >= 5.5
ORDER BY industry_tenure DESC;
#This query uses the HAVING clause to return the industries that have an average employee tenure of at least 5.5 years.

#Make a list of companies ranked by average, above average, or below employee tenure.
SELECT ROUND(AVG(avg_employee_tenure), 1) FROM fortune_companies;
#This first query find the average employee tenure across all industries.
SELECT company_name, avg_employee_tenure
, CASE WHEN avg_employee_tenure > 6 THEN "Above Average"
WHEN avg_employee_tenure < 6 THEN "Below Average"
ELSE "Average" END AS tenure_rank
FROM fortune_companies
GROUP BY company_id
ORDER BY avg_employee_tenure DESC;
#I then use a CASE statement to determine which companies are at, above, or below the average.

#Which retail companies that offer healthcare benefits also have more than 15 paid days off?
SELECT company_name, paid_time_off_days 
FROM fortune_companies
WHERE industry = "Retail"
AND healthcare_benefits = 1
AND paid_time_off_days > 15;
#This query uses the AND clause twice to filter down the results to show only the retail copmanies with healthcare benefits and more than 15 paid days off.
