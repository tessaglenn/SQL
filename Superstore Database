--This is the table I am using to query.
CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);
    
    
-- Â© Copyright 2025 Break Into Tech  --

--Write a SQL query that orders the items by price.
SELECT item_name, price
FROM superstore
ORDER BY price DESC;
--In this query, I am gathering every item name and its price and ordering them to show the most expensive
at the top.

--Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.
--What is the most expensive and least expensive item?
SELECT item_name AS most_expensive, price
FROM superstore
WHERE price = ( 
  	SELECT MAX(price) 
  	FROM superstore)
;
--In the query above, I used a subquery to find the most expensive item, then displayed it with its item
name to show the most expensive item.
SELECT item_name AS least_expensive, price 
FROM superstore
WHERE price = (
	SELECT MIN(price) 
  	FROM superstore
)
;
--I did the same thing for the next query except I found the least expensive item.


--Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies".
--What is the total price of all kitchen supplies items?
SELECT ROUND(SUM(price),2) as total_price
FROM superstore
WHERE category = 'Kitchen Supplies'
;
--Here I used the SUM function to add up all the prices together combined with the WHERE clause to 
filter down to only add up the price of the kitchen supplies.

--What is the price of the total amount of stock of kitchen supplies?
SELECT ROUND(SUM(price*stock_quantity),2) AS total_kitchen_supplies
FROM superstore
WHERE category = 'Kitchen Supplies'
;
--Here I added up the product of the price and stock quantity for every item and filtered out every
product other than the kitchen supplies with the WHERE clause to see the total price of the inventory.

--Come up with your own question about the data and try to answer it using SQL. 
--What are the five lowest rated items, and how much of each do we have in stock?
SELECT item_name, stock_quantity, average_rating
FROM superstore
ORDER BY average_rating 
LIMIT 5;
--This query displays the name, quantity, and rating of every item ordered by its average rating and limited
to the five lowest rated items.
